env:
  CIBW_BUILD_VERBOSITY: 3
  DOCKER_USERNAME: ENCRYPTED[!09cc4caa9cb6dbf5af7f2630c1d74076abd1cff6bb103db2bae45d022f28404e040ee5db21f076f70decb59a294780ab!]
  DOCKER_PASSWORD: ENCRYPTED[!3eccd194e0044101db2d7379d2d95f9255e3493c7ae72a6843ca83a6547ea271541271d77858a2ffd30f61ab68514a64!]
  TAG_x86_64: ci-x86_64-tmp
  TAG_AARCH64: ci-aarch64-tmp


build_and_store_wheels: &BUILD_AND_STORE_WHEELS
  install_cibuildwheel_script:
    - python -m pip install cibuildwheel==2.12.0
  run_cibuildwheel_script:
    - cibuildwheel
  wheels_artifacts:
    path: "wheelhouse/*"


linux_aarch64_task:
  name: build_linux_aarch64_wheels
  timeout_in: 120m
  env:
    matrix:
      - CIBW_BUILD: "cp36-manylinux*"
      - CIBW_BUILD: "cp37-manylinux*"
      - CIBW_BUILD: "cp38-manylinux*"
      - CIBW_BUILD: "cp39-manylinux*"
      - CIBW_BUILD: "cp310-manylinux*"
      - CIBW_BUILD: "cp311-manylinux*"
    CIBW_ARCHS_LINUX: "auto"
    CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
    CIBW_BEFORE_ALL_LINUX: |
      yum install -y gcc-c++ libpng-devel libpng
      python -m pip install cmake ninja
    CIBW_BEFORE_TEST: >
      python -m pip install --find-links=wheelhouse/ -r requirements.txt
    CIBW_TEST_COMMAND: bash {project}/tests/run_tests.sh
    # CIBW_ENVIRONMENT: PIP_GLOBAL_OPTION="build_ext -j4"
  compute_engine_instance:
    image_project: cirrus-images
    image: family/docker-builder-arm64
    architecture: arm64
    platform: linux
    cpu: 2
    memory: 2G
  install_pre_requirements_script:
   - export DEBIAN_FRONTEND=noninteractive
   - apt-get update
   - apt-get install -y python3-dev python-is-python3
  get_version_script:
   - ENVFILE=tmp.env
   - echo "ANTSPY_VERSION=$(python setup.py --version)" >> ${ENVFILE}
   # https://cirrus-ci.org/guide/writing-tasks/#http-cache
   - curl -s -X POST --data-binary @${ENVFILE} http://${CIRRUS_HTTP_CACHE_HOST}/${ENVFILE}
  <<: *BUILD_AND_STORE_WHEELS


macos_arm64_task:
  name: build_macos_arm64_wheels
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode
  env:
    matrix:
    - CIBW_BUILD: cp38-macosx_arm64
    - CIBW_BUILD: cp39-macosx_arm64
    - CIBW_BUILD: cp310-macosx_arm64
    - CIBW_BUILD: cp311-macosx_arm64
    CIBW_ARCHS_MACOS: arm64
    CIBW_BEFORE_ALL_MACOS: |
      python -m ensurepip --upgrade
      conda install cmake ninja libpng
    CIBW_BEFORE_TEST: >
      python -m pip install --find-links=wheelhouse/ -r requirements.txt
    CIBW_TEST_COMMAND: bash {project}/tests/run_tests.sh
    CIBW_TEST_SKIP: cp38-macosx_*:arm64
    PATH: $HOME/mambaforge/bin/:${PATH}
    CONDA_HOME: $HOME/mambaforge
  conda_script:
    - curl -L -o ~/mambaforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh
    - bash ~/mambaforge.sh -b -p ~/mambaforge
  <<: *BUILD_AND_STORE_WHEELS


docker_builder:
  name: build_linux_x86_64_image
  timeout_in: 120m
  setup_script:
    - docker --version
  build_script: docker build --tag noelmni/antspy:${TAG_x86_64} .
  login_script: docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
  push_script: docker push noelmni/antspy:${TAG_x86_64}


docker_builder:
  name: build_linux_aarch64_image
  timeout_in: 120m
  env:
    CIRRUS_ARCH: arm64
  setup_script:
    - docker --version
  build_script: docker build --tag noelmni/antspy:${TAG_AARCH64} .
  login_script: docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
  push_script: docker push noelmni/antspy:${TAG_AARCH64}


docker_builder:
  name: build_unified_multiarch_image
  timeout_in: 120m
  depends_on:
    - build_linux_x86_64_image
    - build_linux_aarch64_image
  env:
    DOCKER_CLI_EXPERIMENTAL: enabled
    BRANCH_TAG: ${CIRRUS_BRANCH}
    SHORT_SHA_TAG: ${CIRRUS_CHANGE_IN_REPO:0:7}
    TAG_MULTIARCH: ${BRANCH_TAG}-${SHORT_SHA_TAG}
  script: |
    docker info
    docker login --username=${DOCKER_USERNAME} --password=${DOCKER_PASSWORD}
    docker manifest create noelmni/antspy:${TAG_MULTIARCH} --amend noelmni/antspy:${TAG_x86_64} noelmni/antspy:${TAG_AARCH64}
    docker manifest push noelmni/antspy:${TAG_MULTIARCH}
    curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 > regctl
    chmod 755 regctl
    ./regctl image copy noelmni/antspy:${TAG_MULTIARCH} noelmni/antspy:${BRANCH_TAG}
    ./regctl image copy noelmni/antspy:${TAG_MULTIARCH} noelmni/antspy:${BRANCH_TAG}-latest
    curl -O http://${CIRRUS_HTTP_CACHE_HOST}/tmp.env
    export $(cat tmp.env)
    if [ "${ANTSPY_VERSION}" != "" ] && [ "${CIRRUS_RELEASE}" != "" ]; then
      ./regctl image copy noelmni/antspy:${TAG_MULTIARCH} noelmni/antspy:v${ANTSPY_VERSION}
    fi


# linux_x86_64_task:
#   name: Build Linux x86_64 wheels
#   timeout_in: 120m
#   env:
#     matrix:
#       - CIBW_BUILD: "cp36-manylinux*"
#       - CIBW_BUILD: "cp37-manylinux*"
#       - CIBW_BUILD: "cp38-manylinux*"
#       - CIBW_BUILD: "cp39-manylinux*"
#       - CIBW_BUILD: "cp310-manylinux*"
#     CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
#     CIBW_ARCHS_LINUX: "auto64"
#     CIBW_BEFORE_ALL_LINUX: |
#       yum install -y gcc-c++ libpng-devel libpng
#       python -m pip install cmake ninja
#     CIBW_BEFORE_TEST: >
#       python -m pip install --find-links=wheelhouse/ -r requirements.txt
#     CIBW_TEST_COMMAND: bash {project}/tests/run_tests.sh
#     # CIBW_ENVIRONMENT: PIP_GLOBAL_OPTION="build_ext -j4"
#   compute_engine_instance:
#     image_project: cirrus-images
#     image: family/docker-builder
#     platform: linux
#     cpu: 2
#     memory: 2G
#   install_pre_requirements_script:
#    - export DEBIAN_FRONTEND=noninteractive
#    - apt-get update
#    - apt-get install -y python3-dev python-is-python3
#   <<: *BUILD_AND_STORE_WHEELS