build_and_store_wheels: &BUILD_AND_STORE_WHEELS
  install_cibuildwheel_script:
    - python -m pip install cibuildwheel==2.11.4
  run_cibuildwheel_script:
    - cibuildwheel
  wheels_artifacts:
    path: "wheelhouse/*"


linux_x86_task:
  name: Build Linux x86 wheels
  container:
    image: ubuntu:20.04
    cpu: 4
    memory: 8G
    
  install_pre_requirements_script:
   - export DEBIAN_FRONTEND=noninteractive
   - apt-get update
   - apt-get install -y --no-install-recommends apt-transport-https bash ca-certificates curl git gnupg wget
   - apt-get install -y build-essential gfortran libpng-dev libblas-dev liblapack-dev
   - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py39_22.11.1-1-Linux-x86_64.sh && /bin/bash Miniconda3-py39_22.11.1-1-Linux-x86_64.sh -b -p /opt/conda
   - rm -f Miniconda3-py39_22.11.1-1-Linux-x86_64.sh   
   - export PATH=/opt/conda/bin:$PATH
   - conda update conda
   - conda install --yes cmake ninja pip && conda clean -ya
  <<: *BUILD_AND_STORE_WHEELS


linux_aarch64_task:
  name: Build Linux aarch64 wheels
  arm_container:
    image: ubuntu:20.04
    cpu: 4
    memory: 8G
    
  install_pre_requirements_script:
   - export DEBIAN_FRONTEND=noninteractive
   - apt-get update
   - apt-get install -y --no-install-recommends apt-transport-https bash ca-certificates curl git gnupg wget
   - apt-get install -y build-essential gfortran libpng-dev libblas-dev liblapack-dev
   - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py39_22.11.1-1-Linux-x86_64.sh && /bin/bash Miniconda3-py39_22.11.1-1-Linux-x86_64.sh -b -p /opt/conda
   - rm -f Miniconda3-py39_22.11.1-1-Linux-x86_64.sh
   - export PATH=/opt/conda/bin:$PATH
   - conda update conda
   - conda install --yes cmake ninja pip && conda clean -ya
  <<: *BUILD_AND_STORE_WHEELS

# windows_x86_task:
#   name: Build Windows x86 wheels.
#   windows_container:
#     image: cirrusci/windowsservercore:visualstudio2022
#     cpu: 4
#     memory: 8G

#   install_pre_requirements_script:
#     - choco install -y --no-progress python3 --version 3.10.6
#     - choco install -y --no-progress cmake
#     - choco install -y --no-progress ninja
#     - refreshenv
#     - echo PATH=%PATH% >> "%CIRRUS_ENV%"
#   <<: *BUILD_AND_STORE_WHEELS

# macos_arm64_task:
#   name: Build macOS arm64 wheels.
#   macos_instance:
#     image: ghcr.io/cirruslabs/macos-monterey-xcode

#   env:
#     PATH: /opt/homebrew/opt/python@3.10/bin:$PATH
#   install_pre_requirements_script:
#     - brew install python@3.10 cmake libpng ninja
#     - ln -s python3 /opt/homebrew/opt/python@3.10/bin/python
#   <<: *BUILD_AND_STORE_WHEELS
