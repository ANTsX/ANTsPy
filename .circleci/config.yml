# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    resource_class: 2xlarge+
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo


    steps:
      - checkout

      - run:
          name: "Setup custom environment variables"
          command: |
            echo 'export PATH="/home/circleci/repo/venv/cmake-3.14.0/bin:$PATH"' >> $BASH_ENV # Redirect MY_ENV_VAR into $BASH_ENV

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          no_output_timeout: 600m
          command: |
            echo $PATH
            python3 -m venv venv
            . venv/bin/activate
            source $BASH_ENV
            pip install -r requirements.txt
            cd venv && wget --quiet https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0.tar.gz && tar -xvf cmake-3.14.0.tar.gz &&  cd cmake-3.14.0 && ./bootstrap && make
            find ./ -name cmake

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          no_output_timeout: 600m
          command: |
            . venv/bin/activate
            source $BASH_ENV
            find ./ -name cmake
            python setup.py install

      - store_artifacts:
          path: test-reports
          destination: test-reports
